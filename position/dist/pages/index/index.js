;require('./../../runtime');(wx["webpackJsonp"] = wx["webpackJsonp"] || []).push([[2],{

/***/ 20:
/***/ (function(module, exports) {

//index.js
var app = getApp();
Page({
  data: {
    longitude: 113.324520,
    latitude: 23.099994,
    mapHeight: "100vh",
    userLicenseAgreementDisplay: false,
    boxDisplay: false,
    repairFeedbackDisplay: false,
    // boxDisplay:true,
    hasUserInfo: false,
    disabled: true,
    canIUse: wx.canIUse('button.open-type.getUserInfo'),
    cannotEntery: true,
    timer: "",
    submitFeedback: [],
    userInfo: {},
    markers: [{
      iconPath: "../img/mapMarker.png",
      id: 0,
      latitude: 30.49984,
      longitude: 114.34253,
      width: 30,
      height: 30
    }],
    // 故障反馈类型
    items: [{
      name: 'location',
      value: '校车的定位错误；定位与实际位置偏离',
      color: 'red'
    }, {
      name: 'state',
      value: '校车颜色标示的状态与校车的实际状态不符',
      color: 'red'
    }, {
      name: 'number',
      value: '校车车号不对应',
      color: 'red'
    }, {
      name: 'path',
      value: '路线错误，上车点错误',
      color: 'red'
    }]
  },
  onReady: function onReady(e) {
    // 使用 wx.createMapContext 获取 map 上下文
    var that = this;
    this.mapCtx = wx.createMapContext('myMap');
    wx.getLocation({
      type: 'gcj02',
      //返回可以用于wx.openLocation的经纬度
      success: function success(res) {
        var latitude = res.latitude;
        var longitude = res.longitude;
        that.setData({
          latitude: latitude,
          longitude: longitude
        });
      }
    });
    var token = wx.getStorageSync('token');

    if (token) {
      var busPositionUrl = app.BASE_URL + '/bus/all';
      app.request(busPositionUrl, 'GET', '', function (res) {
        var getLatitude = res.data.bused[0].position.latitude / 100;
        var getLongitude = res.data.bused[0].position.longitude.toString() / 100;
        var getId = res.data.bused[0].id;
        that.setData({
          markers: [{
            iconPath: "../img/greenBus.png",
            id: 0,
            latitude: 30.487226,
            longitude: 114.392588,
            width: 30,
            height: 30
          }]
        });
        console.log(that.data.markers);
      }, function (res) {}, {
        'Authorization': token
      }, '');
      clearInterval(that.data.timer);
      console.log("gggg");
    } else {
      // that.onReady()
      that.setData({
        timer: setInterval(function () {
          that.onReady();
        }, 10000)
      });
    }
  },
  bindGetUserInfo: function bindGetUserInfo(e) {
    // 查看是否授权
    var that = this;
    wx.getSetting({
      success: function success(res) {
        if (res.authSetting['scope.userInfo']) {
          wx.getUserInfo({
            success: function success(res) {
              wx.setStorageSync("userInfoStr", res.userInfo);
              wx.login({
                success: function success(res) {
                  var userInfoStr = wx.getStorageSync("userInfoStr");
                  console.log(userInfoStr);

                  if (res.code) {
                    //发起网络请求
                    var nicN = userInfoStr.nickName,
                        nicA = userInfoStr.avatarUrl,
                        authorizeUrl = app.BASE_URL + '/user/session',
                        authorizeData = {
                      code: res.code
                    };
                    app.request(authorizeUrl, 'POST', authorizeData, function (res) {
                      wx.setStorageSync('token', res.header.Authorization); // wx.setStorageSync('hasToken', true)   
                    }, function (res) {}, {
                      'content-type': 'application/json'
                    }, '');
                  } else {
                    console.log('登录失败！' + res.errMsg);
                  }
                }
              });
            }
          });
          wx.setStorageSync("userEnter", true);
          that.setData({
            cannotEntery: false,
            userLicenseAgreementDisplay: true
          });
        } else {
          console.log("用户拒绝登录");
        }
      }
    });
  },
  onLoad: function onLoad() {
    var that = this; // if (app.globalData.userInfo) {
    //   this.setData({
    //     userInfo: app.globalData.userInfo,
    //     hasUserInfo: true
    //   })
    // } else if (this.data.canIUse){
    //   // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
    //   // 所以此处加入 callback 以防止这种情况
    //   app.userInfoReadyCallback = res => {
    //     this.setData({
    //       userInfo: res.userInfo,
    //       hasUserInfo: true
    //     })
    //   }
    // } else {
    //   // 在没有 open-type=getUserInfo 版本的兼容处理
    //   wx.getUserInfo({
    //     success: res => {
    //       app.globalData.userInfo = res.userInfo
    //       this.setData({
    //         userInfo: res.userInfo,
    //         hasUserInfo: true
    //       })
    //     }
    //   })
    // }
  },
  onShow: function onShow(e) {
    var agreement = wx.getStorageSync('agreement');
    var userEnter = wx.getStorageSync('userEnter');
    userEnter ? this.setData({
      cannotEntery: false,
      userLicenseAgreementDisplay: true
    }) : this.setData({
      cannotEntery: true,
      userLicenseAgreementDisplay: false
    });

    if (agreement) {
      this.setData({
        userLicenseAgreementDisplay: false,
        boxDisplay: true
      });
    }
  },
  getUserInfo: function getUserInfo(e) {
    console.log(e);
    app.globalData.userInfo = e.detail.userInfo;
    this.setData({
      userInfo: e.detail.userInfo,
      hasUserInfo: true
    });
  },
  // 查看用户许可协议详细内容（跳转
  toAgreement: function toAgreement(e) {
    wx.navigateTo({
      url: '../agreement/agreement'
    });
  },
  // 同意用户许可协议后不再显示用户许可协议面板
  agreemented: function agreemented(e) {
    wx.setStorageSync('agreement', true);
    this.setData({
      userLicenseAgreementDisplay: false,
      boxDisplay: true
    });
    var token = wx.getStorageSync('token');
    var agreementUrl = app.BASE_URL + '/user/agreement';
    app.request(agreementUrl, 'GET', '', function (res) {
      console.log('agreementUrl');
      console.log(res);
    }, function (res) {}, {
      'Authorization': token
    }, '');
  },
  //map组件上添加button测试
  toOrder: function toOrder(e) {
    wx.navigateTo({
      url: '../agreement/agreement'
    });
  },
  // 故障反馈面板是否显示
  repair: function repair() {
    this.setData({
      boxDisplay: false,
      repairFeedbackDisplay: true
    });
  },
  // 获取checkbox的值
  checkboxChange: function checkboxChange(e) {
    console.log('checkbox发生change事件，携带value值为：', e.detail.value);
    this.setData({
      submitFeedback: e.detail.value
    });
  },
  // 提交反馈
  submitFeedback: function submitFeedback(e) {
    console.log(this.data.submitFeedback);
    var feedbackUrl = app.BASE_URL + '/user/feedback';
    app.request(feedbackUrl, 'GET', '', function (res) {
      console.log('feedbackUrl');
      console.log(res);
    }, function (res) {}, {
      'content-type': 'application/json'
    }, '');
  },
  repairFeedbackBox: function repairFeedbackBox() {
    this.setData({
      repairFeedbackDisplay: false,
      boxDisplay: true
    });
  }
});

/***/ })

},[[20,0]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,